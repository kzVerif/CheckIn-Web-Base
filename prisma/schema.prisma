generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type CheckinsPosition {
  x Float
  y Float
}

type ZonesRoom {
  building    ZonesRoomBuilding
  floor       Int
  room_number String
}

type ZonesRoomBuilding {
  code String
  name String
}

model Checkins {
  id          String           @id @default(auto()) @map("_id") @db.ObjectId
  course_code String
  position    CheckinsPosition
  status      String
  timestamp   DateTime         @default(now())

  // ✅ Relation กับ Zone
  zone_id String? @db.ObjectId
  zone    Zones?  @relation(fields: [zone_id], references: [id])

  // ✅ Relation กับ Device
  device_id String
  device    Devices? @relation(fields: [device_id], references: [device_id])
}

model Devices {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  device_id     String   @unique
  student_id    String   @unique
  name          String
  password      String
  registered_at DateTime @default(now())

  checkins Checkins[]
}

model Zones {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  polygon Json
  room    ZonesRoom

  beacons   Beacons[]
  schedules Schedules[]
  Checkins  Checkins[]
}

model Beacons {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  label       String
  mac_address String @unique
  x           Int
  y           Int

  zone_id String? @db.ObjectId
  zone    Zones?  @relation(fields: [zone_id], references: [id])
}

model Schedules {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  course_code String  @unique
  course_name String?
  day_of_week Int
  end_time    String
  semester    String
  start_time  String

  zone_id String? @db.ObjectId
  zone    Zones?  @relation(fields: [zone_id], references: [id])
}
